# Generated by Django 5.2.7 on 2025-10-08 03:40

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CargaMasiva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_carga', models.CharField(choices=[('FACTORES', 'Factores Calculados'), ('MONTOS', 'Montos DJ1948')], max_length=10)),
                ('nombre_archivo', models.CharField(max_length=255)),
                ('registros_procesados', models.IntegerField(default=0)),
                ('registros_exitosos', models.IntegerField(default=0)),
                ('registros_fallidos', models.IntegerField(default=0)),
                ('errores_detalle', models.TextField(blank=True, null=True)),
                ('fecha_carga', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargas_masivas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Carga Masiva',
                'verbose_name_plural': 'Cargas Masivas',
                'db_table': 'carga_masiva',
                'ordering': ['-fecha_carga'],
            },
        ),
        migrations.CreateModel(
            name='CalificacionTributaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ejercicio', models.IntegerField(help_text='Año comercial', validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)])),
                ('mercado', models.CharField(choices=[('ACN', 'Acciones'), ('CFI', 'Renta Fija'), ('FM', 'Fondos Mutuos')], max_length=3)),
                ('instrumento', models.CharField(help_text='Nombre o código del instrumento', max_length=50)),
                ('fecha_pago', models.DateField(help_text='Fecha de pago del dividendo')),
                ('secuencia_evento', models.IntegerField(help_text='Secuencia superior a 10.000')),
                ('numero_dividendo', models.IntegerField(default=0)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo_sociedad', models.CharField(choices=[('A', 'Abierta'), ('C', 'Cerrada')], max_length=1)),
                ('acogido_isfut', models.BooleanField(default=False, help_text='Acogido a ISFUT/ISIFT')),
                ('valor_historico', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('factor_actualizacion', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9)),
                ('factor_8', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Con crédito IDPC >= 01.01.2017', max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_9', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Con crédito IDPC <= 31.12.2016', max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_10', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Con derecho a crédito IDPC voluntario', max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_11', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Sin derecho a crédito', max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_12', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Rentas RAP y Diferencia Inicial', max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_13', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_14', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_15', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_16', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_17', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_18', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_19', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_20', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_21', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_22', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_23', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_24', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_25', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_26', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_27', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_28', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_29', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_30', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_31', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_32', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_33', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_34', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_35', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_36', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('factor_37', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=9, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('origen', models.CharField(choices=[('MANUAL', 'Ingreso Manual'), ('MASIVO', 'Carga Masiva'), ('SISTEMA', 'Sistema Bolsa')], default='MANUAL', max_length=10)),
                ('es_local', models.BooleanField(default=True, help_text='True: local del corredor | False: compartido del sistema')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(help_text='Corredor dueño de la calificación', on_delete=django.db.models.deletion.CASCADE, related_name='calificaciones', to=settings.AUTH_USER_MODEL)),
                ('carga_masiva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calificaciones', to='gestion_tributaria.cargamasiva')),
            ],
            options={
                'verbose_name': 'Calificación Tributaria',
                'verbose_name_plural': 'Calificaciones Tributarias',
                'db_table': 'calificacion_tributaria',
                'ordering': ['-ejercicio', '-fecha_pago'],
            },
        ),
        migrations.CreateModel(
            name='LogOperacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operacion', models.CharField(choices=[('CREATE', 'Creación'), ('UPDATE', 'Actualización'), ('DELETE', 'Eliminación'), ('CARGA', 'Carga Masiva')], max_length=10)),
                ('datos_anteriores', models.JSONField(blank=True, help_text='Estado antes de la operación', null=True)),
                ('datos_nuevos', models.JSONField(blank=True, help_text='Estado después de la operación', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('calificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='gestion_tributaria.calificaciontributaria')),
                ('carga_masiva', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='gestion_tributaria.cargamasiva')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Operación',
                'verbose_name_plural': 'Logs de Operaciones',
                'db_table': 'log_operacion',
                'ordering': ['-fecha_hora'],
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(choices=[('CORREDOR', 'Corredor'), ('ADMIN', 'Administrador')], default='CORREDOR', max_length=10)),
                ('nombre_completo', models.CharField(max_length=200)),
                ('rut', models.CharField(max_length=12, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
                'db_table': 'perfil',
            },
        ),
        migrations.AddIndex(
            model_name='calificaciontributaria',
            index=models.Index(fields=['usuario', 'ejercicio', 'mercado'], name='calificacio_usuario_69c260_idx'),
        ),
        migrations.AddIndex(
            model_name='calificaciontributaria',
            index=models.Index(fields=['instrumento', 'fecha_pago'], name='calificacio_instrum_97ff23_idx'),
        ),
    ]
